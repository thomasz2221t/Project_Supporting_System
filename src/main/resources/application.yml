server:
  port: 8080
spring:
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
  application.name: projectmanagementsystem
  datasource:
    driver-class-name: org.postgresql.Driver
    schemaName: ${spring.application.name}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DATABASE:management}?currentSchema=public&stringtype=unspecified&ApplicationName=${spring.application.name}&reWriteBatchedInserts=true
    username: ${DBUSER:management}
    password: ${DBPASSWORD:management}
    # if true initializes db using sql scripts
    initialize: false
  jpa:

    database: POSTGRESQL
    # initialize a database using JPA.
    generate-ddl: true
    properties:
      hibernate:
        format_sql: true
        globally_quoted_identifiers: true
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        default_schema: public
        order_inserts: true
    hibernate:
      # controls db initialization behavior in a more fine-grained
      # way [none|validate|update|create|create-drop]
      ddl-auto: update
    show-sql: true
    defer-datasource-initialization: true

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://127.0.0.1:28080/auth/realms/management/protocol/openid-connect/certs
  sql:
    init:
      mode: always
file:
  upload-dir: Users/group/uploads

management:
  queue: studentqueue
cloud:
  aws:
    stack:
      auto: false
---
spring:
  config:
    activate:
      on-profile: local
cloud:
  aws:
    signature: foo

    discovery:
      namespace: test.namespace
    stack:
      auto: false
    region:
      static: eu-central-1
    credentials:
      accessKey: FOO
      secretKey: BAR
  localstack:
    sqs:
      url: http://localstack:4566
aws:
  paramstore:
    enabled: false