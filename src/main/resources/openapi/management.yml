openapi: 3.0.0
info:
  version: 2.0.0
  title: DXI
paths:
  /topic:
    post:
      operationId: addNewTopic
      description: Adds new Topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
    put:
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int64
          required: true
      operationId: editTopic
      description: Edits topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64
      operationId: getAllTopics
      description: Returns all topics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicFindResponse'
    delete:
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int64
          required: true
      description: Deletes topic
      operationId: deleteTopic
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
  /lecturer:
    post:
      operationId: createLecturer
      description: Create user lecturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecturer'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /admin:
    post:
      operationId: createAdmin
      description: Create user Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /student:
    post:
      operationId: createStudent
      description: Create user Student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
components:
  schemas:
    TopicRequest:
      type: object
      properties:
        topicName:
          type: string
        description:
          type: string
    TopicFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
    Topic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        topicName:
          type: string
        description:
          type: string
        groupIds:
          items:
            type: integer
            format: int64
        lecturerId:
          type: integer
          format: int64
    TopicListResponse:
      type: array
      items:
        $ref: "#/components/schemas/TopicResponse"
    Lecturer:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        subject:
          type: string
        academicDegree:
          type: string
        cathedral:
          type: string
    UserResponse:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
    Admin:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    Student:
      type: object
      properties:
        username:
          type: string
        albumNo:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        semesters:
          type: array
          items:
            $ref: '#/components/schemas/Semester'
    Semester:
      type: object
      properties:
        fieldOfStudy:
          type: string
        year:
          type: string
        semester:
          type: string
