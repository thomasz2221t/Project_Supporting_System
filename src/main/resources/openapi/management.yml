openapi: 3.0.0
info:
  version: 2.0.0
  title: DXI
paths:

  /topic:
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64

      operationId: getAllTopics
      description: Returns all topics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicFindResponse'
    post:
      operationId: addNewTopic
      description: Adds new Topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
  /topic/{id}:
    get:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: getTopic
      description: Gets single topic
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      description: Deletes topic
      operationId: deleteTopic
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
    put:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: editTopic
      description: Edits topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'


  /lecturer:
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64

      operationId: getAllLecturers
      description: Returns all lecturers
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturerFindResponse'
    post:
      operationId: createLecturer
      description: Create user lecturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecturer'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturerResponse'
  /lecturer/info:
    get:
      operationId: getLecturerInfo
      description: Get lecturer's info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturerResponse'
  /lecturer/{id}:
    put:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: updateLecturer
      description: Updates user lecturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LecturerUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturerResponse'
    get:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: getLecturerById
      description: gets lecturer by id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturerResponse'
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: deleteLecturer
      description: Deletes user lecturer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /admin:
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64
      operationId: getAllAdmins
      description: Returns all admins
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFindResponse'
    post:
      operationId: createAdmin
      description: Create user Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /admin/info:
    get:
      operationId: getAdminInfo
      description: Get admin's info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminResponse'
  /admin/{id}:
    get:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: getAdminById
      description: gets admin by id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminResponse'
    put:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: updateAdmin
      description: Updates user admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: deleteAdmin
      description: Deletes user Admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /student:
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64

      operationId: getAllStudents
      description: Returns all students
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFindResponse'
  /student/semester/{semesterId}:
    parameters:
      - name: semesterId
        in: path
        schema:
          type: integer
          format: int64
        required: true

    post:
      operationId: createStudent
      description: Create user Student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64
          required: false

      operationId: getStudentsForSemester
      description: Gets users for semester
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFindResponse'
  /student/info:
    get:
      operationId: getStudentInfo
      description: Get students's info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
  /student/semesters:
    get:
      operationId: getStudentSemesters
      description: Get students's semester list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemesterResponse'
  /student/{id}:
    get:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: getStudentById
      description: gets user by id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
    put:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: updateStudent
      description: Updates user student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: deleteStudent
      description: Deletes user Student
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /user:
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64
          required: false
      operationId: getAllUsers
      description: Returns all users
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFindResponse'
  /user/{id}:
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: delteUser
      description: Returns all users
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /semester:
    get:
      operationId: getAllSemesters
      description: Returns all semesters
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemesterResponse'
  /group/{semesterId}:
    parameters:
      - name: semesterId
        in: path
        schema:
          type: integer
          format: int64
        required: true
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64
      operationId: getSemesterGroups
      description: gets all groups related to semester
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFindResponse'
  /group/open/{semesterId}:
    parameters:
      - name: semesterId
        in: path
        schema:
          type: integer
          format: int64
        required: true
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            format: int64
      operationId: getOpenSemesterGroups
      description: gets all open groups related to semester
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFindResponse'
  /group/{semesterId}/{topicId}/{maxSize}:
    post:
      parameters:
        - name: semesterId
          in: path
          schema:
            type: integer
            format: int64
          required: true
        - name: topicId
          in: path
          schema:
            type: integer
            format: int64
          required: true
        - name: maxSize
          in: path
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
          required: true
      operationId: addNewGroup
      description: Adds new Group
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
  /group/addStudents:
    post:
      parameters:
        - name: groupId
          in: query
          schema:
            type: integer
            format: int64
          required: true
        - name: studentIds
          in: query
          schema:
            type: array
            items:
              type: string
          required: true
      operationId: insertStudents
      description: inserts students into group
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
  /group/signUp/{groupId}:
    post:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: signUpForGroup
      description: signs user for group
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
  /group/signUser/{groupId}/{userId}:
    post:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true

      operationId: signUserForGroup
      description: signs user for group
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
  /group/download/{groupId}/{fileName}:
    get:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
        - name: fileName
          in: path
          schema:
            type: string
          required: true
      operationId: downloadFile
      description: downloads group file
      responses:
        '200':
          description: ''
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /group/upload/{groupId}:
    post:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: uploadFile
      description: uploads file for group
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
  /group/info/{groupId}:
    get:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: getGroupInfo
      description: returns group info

      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /group/{groupId}:
    put:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: changeGroupState
      description: changes group state
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/GroupState'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
    post:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: generateFinalPdf
      description: generates pdf with group state
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /group/marks/{groupId}:
    put:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: setStudentsMark
      description: sets students marks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarkRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /meeting/{groupId}:
    post:
      parameters:
        - name: groupId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: createMeeting
      description: creates new meeting
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: date-time
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingResponse'
  /meeting/{meetingId}:
    put:
      parameters:
        - name: meetingId
          in: path
          schema:
            type: integer
            format: int64
          required: true
      operationId: fillPresenceList
      description: fills presence list
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PresenceRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingResponse'
components:
  schemas:
    TopicRequest:
      type: object
      properties:
        topicName:
          type: string
        description:
          type: string
    TopicFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
    Topic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        topicName:
          type: string
        description:
          type: string
        groupIds:
          items:
            type: integer
            format: int64
        lecturer:
          $ref: '#/components/schemas/LecturerResponse'
    TopicResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        topicName:
          type: string
        description:
          type: string
        lecturer:
          $ref: '#/components/schemas/LecturerResponse'
    Lecturer:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        subject:
          type: string
        academicDegree:
          type: string
        cathedral:
          type: string
    LecturerUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        subject:
          type: string
        academicDegree:
          type: string
        cathedral:
          type: string
    LecturerResponse:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        subject:
          type: string
        academicDegree:
          type: string
        cathedral:
          type: string
        isActive:
          type: boolean
    LecturerFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/LecturerResponse'
    UserResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        email:
          type: string
        firstName:
          type: string
        isActive:
          type: boolean
    UserFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    Admin:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    AdminResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    AdminFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminResponse'
    AdminUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    Student:
      type: object
      properties:
        username:
          type: string
        id:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
    StudentFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentResponse'
    StudentUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
    StudentResponse:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        email:
          type: string
        isActive:
          type: boolean
    StudentGroup:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        mark:
          type: integer
          format: int64
    Semester:
      type: object
      properties:
        fieldOfStudy:
          type: string
        year:
          type: string
        semester:
          type: string
    SemesterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fieldOfStudy:
          type: string
        year:
          type: string
        semester:
          type: string
    SemesterRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fieldOfStudy:
          type: string
        year:
          type: string
        semester:
          type: string
    GroupResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        topic:
          $ref: '#/components/schemas/TopicResponse'
        maxSize:
          type: integer
          format: int32
        groupState:
          $ref: '#/components/schemas/GroupState'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentResponse'
    GroupFindResponse:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupResponse'
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maxSize:
          type: integer
          format: int32
        topic:
          $ref: '#/components/schemas/TopicResponse'

        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentGroup'
        filePaths:
          type: array
          items:
            type: string
        meetings:
          type: array
          items:
            $ref: '#/components/schemas/MeetingResponse'

    MeetingResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        presenceList:
          type: array
          items:
            $ref: '#/components/schemas/PresenceResponse'
    PresenceResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        wasPresent:
          type: boolean
        student:
            $ref: '#/components/schemas/StudentResponse'
    Role:
      type: string
      enum:
        - ADMIN
        - LECTURER
        - STUDENT
        - USER
    GroupState:
      type: string
      enum:
        - REG
        - OPEN
        - CLOSE
        - CANCEL
        - FULL
    FileResponse:
      type: object
      properties:
        fileName:
          type: string
        size:
          type: integer
          format: int64
    PresenceRequest:
      type: object
      properties:
        presenceId:
          type: integer
          format: int64
        wasPresent:
          type: boolean
      required:
        - presenceId
        - wasPresent
    MarkRequest:
      type: object
      properties:
        studentId:
          type: string
        mark:
          type: integer
          minimum: 0
          maximum: 6
          format: int64
      required:
        - studentId
        - mark
